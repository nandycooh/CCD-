MCU		：	STM32F103CBT6
封装	：	LQFP48_PIN
Flash	：	128K

发送端初始功能说明V1.6：

	绿灯亮代表手枪有按钮触发 

	通过修改drv_SI4438.h中的宏定义SI4438_CHANNEL_SET来修改对应的信道

-----------------------------------------------------------------------------------------------------
IO口功能说明

	|-------------------------------------------------------------------------------|
	|	端口	|		硬件口名称	|		对应IO	|		功能		|	备注	|
	|--------------------------------------------------------------------------------
	|			|	    @IRQ		|		PB1		|	  中断控制		|			|	
	|			|		@SDIO		|		PB5		|	  SPI数据		|			|
	|			|		@SDOI		|		PB4		|	  SPI数据		|			|	 
	|	 U8		|		@SDN		|		PA12	|	  模块控制		|			|
	|			|		@SCK		|		PB3		|	  SPI时钟		|			|
	|			|		@SCS		|		PA15	|	  SPI片选		|			|
	|--------------------------------------------------------------------------------
	|	 P3 	|	     IN1		|		PA11	|	  保险			|			|	
	|	 P4 	|		 IN2		|		PA5		|	  扳机			|			|
	|	 P7 	|		 IN3		|		PA4		|	  复位			|			|
	|	 P8 	|		 IN4		|		PA3		|	  上膛			|			|
	|	 P9 	|		 IN5		|		PA2		|  	 上弹夹			|			|
	|	 P10 	|		 IN6		|		PA1		|  	 退弹夹			|			|
	|--------------------------------------------------------------------------------
	|	 U2		|	    TOUCH		|		PB8		|	 触摸			|			|	
	|			|		TOUCH_P		|		PB9		|	 触摸电源		|			|
	|--------------------------------------------------------------------------------
	|	 P11	|		LED			|		PC13	|	  LED灯			|			|
	|-------------------------------------------------------------------------------|
	|			|	    LIN1		|		PB13	|	  中断控制		|			|	
	|			|		LIN2		|		PB14	|	  SPI数据		|			|
	|			|		LIN3		|		PB15	|	  SPI数据		|			|	 
	|	 U1		|		HIN1		|		PA8		|	  模块控制		|			|
	|			|		HIN2		|		PB9		|	  SPI时钟		|			|
	|			|		HIN3		|		PA10	|	  SPI片选		|			|
	|			|	    HADD1		|		PA6		|	  中断控制		|			|	
	|			|		HADD2		|		PA7		|	  SPI数据		|			|
	|			|		HADD3		|		PB0		|	  SPI数据		|			|	 
	|-------------------------------------------------------------------------------|
	
	
----------------------------------------------------------------------------------------------------
更新记录：

210205
	对SI4438底层驱动的开发
	测试SI4438各种模式下的功耗

210209
	修改SPI为PB3-PB4-PB5-PA15
	解决PB4-PB3与jlink冲突问题
	
210218
	添加软件控制TX数据速率的设置
	添加设置属性组3、属性组2功能

210220
	底层驱动的功能封装
	通过修改SI4438.h里面的宏定义SI4438_CHANNEL_SET来改变信道
	
	
	未确定睡眠唤醒的方式（扳机还是触摸）

210318
	测试所有的开关量及触摸
	测试SI4438通信，解决无法通信问题	0318-TESTOK
	加入后坐力综合测试
210319	
	解决后坐力无法驱动和4438发送数据冲突问题
	增加4338电源IO控制
	测试4338数据传输距离
	
210322
	修改为扳机单次触发
	状态数据打包
	所有工程代码规范
	优化扳机、上膛联动处理

210331
	修改协议发送至上位机
	解决扳机临界点多次触发问题
	解决扳机触发上膛动作优先级关系

210415
	未组装手枪按照总成板修改协议（测试版）
	
	
210419
	已经组装好的手枪按照按照总成板修改协议
	
210425
	扳机加入标志位计数消抖
	
210511
	修改保险为反方向
	
210518	
	433基频设置为490MHz，频偏设置为250khz
	
210531
	修改换相计数时间为110一次
	
210611
	修改为与总成板应答式数据交互 15：55 TO

210701
	添加手枪休眠功能

210705
	经过测试，三块脚步无问题
	修改协议
	TO
	
210709
	修改上膛闪烁问题：上膛触发时间
	
210714
	优化睡眠唤醒时触摸必须二次触摸才能检测到的问题
	
210728
	修改手枪保险状态与内容提示相反问题
	解决修改保险后引起的灯光冲突问题
	
210819
	添加手枪后座力模式选择
	
210820
	优化上电后座力选择控制
	优化扳机消抖及后座力反应时间

210823
	修改为最新版本0.51
		增加线圈输出端A(PA1)、B(PA2)、C(PA3)三点电压检测
		LED改到PB2
		霍尔板增加保险、上膛、温度接口(PA4)
		IN1改到PA11、IN3改到PB11、IN4改到PC13、IN5改到PC14、IN6改到PC15
		增加硬件看门狗
		
210908
	添加触摸松开延时检测
	同步各从机协议
	
210915
	恢复原协议（数据包大小不一致）进行测试(丢包延时问题)，增加新老协议选择

210918
	增加应答模式选择（定时器或轮循）	
	
211103
	优化扳机数据处理时灯光不亮问题
	优化手枪上膛中途，保险上拉导致线圈持续通电问题
	优化后座力驱动消抖部分
	添加后座力驱动模式选择
	优化后座力产生时保险上拉造成空仓挂机问题
	
211105
	优化一直处于上膛状态，导致发热等问题(改为3S恢复)
	
211110
	修改应答协议及数据交互协议
	测试手枪偶尔无后座力问题
	优化手枪套筒复位问题
	解决手枪掉线无法重连问题

211113
	解决手枪掉线（接收检验失败清除数据）
	解决手枪丢后座力问题

211115
	添加上电按下上弹触发保险自由控制后座力功能

211118
	手枪添加后座力模式切换且上传状态

211123
	优化未连接状态下模式切换无后坐力问题
	优化手枪休眠后无法唤醒问题
	
211201
	发布版：优化及整理
	
---------------------------------------------------------------------------------
220602
	增加版本号上传功能
		增加版本号12字节
		修改:
			#define MAX_BUF 28
			#define MSG_SEND_BUFFER          26//有效数据的最大长度
		增加版本号相关宏定义
			#define HARDWARE_VERSION					0x0004047F//硬件版本号 5.2.0
			#define SOFEWARE_VERSION					0x0002037F//软件版本号 5.2.1
			#define PROTOCOL_VERSION          			0x0001027F//协议版本号 0.1.2 

			#define BYTE0(dwTemp)       (*(char *)(&dwTemp))
			#define BYTE1(dwTemp)       (*((char *)(&dwTemp) + 1))
			#define BYTE2(dwTemp)       (*((char *)(&dwTemp) + 2))
			#define BYTE3(dwTemp)       (*((char *)(&dwTemp) + 3))
			
	修改LED指示灯判断
		if(!DOWN_CLIP_BUTTON || TOUCH_BUTTON || !INSURANCE_BUTTON || TRIGGER_BUTTON || CHAMBERING_BUTTON || !UP_CLIP_BUTTON || !REST_BUTTON)
			LED_ON;
		else
			LED_OFF;